// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-sche// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int       @id @default(autoincrement())
  email       String    @unique
  name        String
  phoneNumber String?
  password    String?
  provider    Provider  @default(EMAIL)
  status      Status    @default(OFFLINE)
  createdAt   DateTime  @default(now())
  channels    Channel[]
  messages    Message[]
}

model Channel {
  id        Int       @id @default(autoincrement())
  name      String
  creatorId Int
  createdAt DateTime  @default(now())
  users     User[]
  messages  Message[]
}

model Message {
  id        Int        @id @default(autoincrement())
  content   String
  timeStamp DateTime   @default(now())
  userId    Int
  user      User       @relation(fields: [userId], references: [id])
  channelId Int?
  channel   Channel?   @relation(fields: [channelId], references: [id])
  reactions Reaction[]
  parentId  Int?
  parent    Message?   @relation("replies", fields: [parentId], references: [id])
  replies   Message[]  @relation("replies")
}

model Reaction {
  id        Int     @id @default(autoincrement())
  emoji     String
  count     Int
  messageId Int
  message   Message @relation(fields: [messageId], references: [id])

  @@unique([messageId, emoji])
}

enum Provider {
  EMAIL
  GOOGLE
}

enum Status {
  OFFLINE
  ONLINE
}
